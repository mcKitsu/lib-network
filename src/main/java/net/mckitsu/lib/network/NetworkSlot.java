package net.mckitsu.lib.network;

public class NetworkSlot {
    /* **************************************************************************************
     *  Variable <Public>
     */

    /* **************************************************************************************
     *  Variable <Protected>
     */

    /* **************************************************************************************
     *  Variable <Private>
     */
    private boolean isOpen;

    /* **************************************************************************************
     *  Abstract method <Public>
     */

    /* **************************************************************************************
     *  Abstract method <Protected>
     */

    /* **************************************************************************************
     *  Construct Method
     */
    protected NetworkSlot(){
        this.isOpen = true;
    }

    /* **************************************************************************************
     *  Public Method
     */

    /**
     *
     * @return
     */
    public byte[] read(){

        return new byte[0];
    }


    /**
     *
     * @param data
     */
    public void write(byte[] data){

    }

    /*----------------------------------------
     *  close
     *----------------------------------------*/
    public void close(){
        if(this.isOpen){
            this.isOpen = false;

        }
    }



    /* **************************************************************************************
     *  Public Method <Override>
     */

    /* **************************************************************************************
     *  Public Method <Static>
     */

    /* **************************************************************************************
     *  Protected Method
     */

    /* **************************************************************************************
     *  Protected Method <Override>
     */

    /* **************************************************************************************
     *  Protected Method <Static>
     */

    /* **************************************************************************************
     *  Private Method
     */

    /* **************************************************************************************
     *  Private Method <Override>
     */

    /* **************************************************************************************
     *  Private Method <Static>
     */
}
